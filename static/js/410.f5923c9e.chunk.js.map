{"version":3,"file":"static/js/410.f5923c9e.chunk.js","mappings":"oOAgBA,EAdsB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/B,OACE,2BACE,yBAAG,WAASD,MACZ,uBAAIC,MAGT,ECoBD,EAxBgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GACVO,MAAK,SAAAC,GAAQ,OAAIJ,EAAWI,EAAf,IACbC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACV,KAGF,gCACsB,IAAnBG,EAAQU,SAAgB,uBAAG,8CAC5B,wBACGV,EAAQW,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIjB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OAAO,SAAC,EAAD,CAAwBD,OAAQA,EAAQC,QAASA,GAA7BgB,EAC5B,QAIR,C,8LCzBKC,EAAW,gCACXC,EAAU,mCAEHC,EAAgB,mCAAG,2FACxBC,EADwB,UACfH,EADe,uCACwBC,GADxB,SAEjBG,EAAAA,EAAAA,IACND,GACJZ,MAAK,SAAAC,GACJ,OAAOA,EAASa,KAAKC,OACtB,IACAb,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPgB,mFAAH,qDAUhBa,EAAiB,mCAAG,WAAMC,GAAN,8EACzBL,EADyB,UAChBH,EADgB,iCACiBC,EADjB,kBACkCO,GADlC,SAElBJ,EAAAA,EAAAA,IACND,GACJZ,MAAK,SAAAC,GACJ,OAAOA,EAASa,KAAKC,OACtB,IACAb,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPiB,mFAAH,sDAUjBe,EAAiB,mCAAG,WAAMzB,GAAN,8EACzBmB,EADyB,UAChBH,EADgB,kBACEhB,EADF,oBACqBiB,GADrB,SAElBG,EAAAA,EAAAA,IACND,GACJZ,MAAK,SAAAC,GACJ,OAAOA,EAASa,IACjB,IACAZ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPiB,mFAAH,sDAUjBgB,EAAS,mCAAG,WAAM1B,GAAN,8EACjBmB,EADiB,UACRH,EADQ,kBACUhB,EADV,4BACqCiB,GADrC,SAEVG,EAAAA,EAAAA,IACND,GACJZ,MAAK,SAAAC,GACJ,OAAOA,EAASa,KAAKM,IACtB,IACAlB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPS,mFAAH,sDAUTJ,EAAY,mCAAG,WAAMN,GAAN,8EACpBmB,EADoB,UACXH,EADW,kBACOhB,EADP,4BACkCiB,GADlC,SAEbG,EAAAA,EAAAA,IACND,GACJZ,MAAK,SAAAC,GACJ,OAAOA,EAASa,KAAKC,OACtB,IACAb,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPY,mFAAH,qD","sources":["components/reviews/reviewsMarkup/ReviewsMarkup.jsx","components/reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import propTypes from 'prop-types';\n\nconst ReviewsMarkup = ({ author, content }) => {\n  return (\n    <li>\n      <p>Author: {author}</p>\n      <p>{content}</p>\n    </li>\n  );\n};\n\nReviewsMarkup.propTypes = {\n  author: propTypes.string.isRequired,\n  content: propTypes.string.isRequired,\n};\n\nexport default ReviewsMarkup;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchReviews } from 'services/api';\nimport ReviewsMarkup from './reviewsMarkup/ReviewsMarkup';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReviews(movieId)\n      .then(response => setReviews(response))\n      .catch(error => {\n        console.log(error);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length === 0 && <p>We don't have any reviews for this movie</p>}\n      <ul>\n        {reviews.map(({ id, author, content }) => {\n          return <ReviewsMarkup key={id} author={author} content={content} />;\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6a0c01f57c7aac7238ef2830c0821332';\n\nexport const fetchTrendMovies = async () => {\n  const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data.results;\n    })\n    .catch(error => console.log(error));\n};\n\nexport const fetchSearchMovies = async searchName => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchName}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data.results;\n    })\n    .catch(error => console.log(error));\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n};\n\nexport const fetchCast = async movieId => {\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data.cast;\n    })\n    .catch(error => console.log(error));\n};\n\nexport const fetchReviews = async movieId => {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data.results;\n    })\n    .catch(error => console.log(error));\n};\n"],"names":["author","content","movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","then","response","catch","error","console","log","length","map","id","BASE_URL","API_KEY","fetchTrendMovies","url","axios","data","results","fetchSearchMovies","searchName","fetchMovieDetails","fetchCast","cast"],"sourceRoot":""}