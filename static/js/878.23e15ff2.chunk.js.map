{"version":3,"file":"static/js/878.23e15ff2.chunk.js","mappings":"mOAWA,EATmB,SAAC,GAAqB,IAAnBA,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC3B,OACE,2BACE,gBAAKC,MAAO,IAAKC,IAAKH,EAAOI,IAAKH,KAClC,uBAAIA,MAGT,ECkBD,EAtBa,WACX,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUN,GACPO,MAAK,SAAAC,GAAQ,OAAIJ,EAAQI,EAAZ,IACbC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACV,KAGF,wBACGG,EAAKU,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIlB,EAAyB,EAAzBA,KAAMmB,EAAmB,EAAnBA,aACfpB,EAAK,0DAAsDoB,GACjE,OAAO,SAAC,EAAD,CAAqBnB,KAAMA,EAAMD,MAAOA,GAAvBmB,EACzB,KAGN,C,8LCvBKE,EAAW,gCACXC,EAAU,mCAEHC,EAAgB,mCAAG,2FACxBC,EADwB,UACfH,EADe,uCACwBC,GADxB,SAEjBG,EAAAA,EAAAA,IACND,GACJZ,MAAK,SAAAC,GACJ,OAAOA,EAASa,KAAKC,OACtB,IACAb,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPgB,mFAAH,qDAUhBa,EAAiB,mCAAG,WAAMC,GAAN,8EACzBL,EADyB,UAChBH,EADgB,iCACiBC,EADjB,kBACkCO,GADlC,SAElBJ,EAAAA,EAAAA,IACND,GACJZ,MAAK,SAAAC,GACJ,OAAOA,EAASa,KAAKC,OACtB,IACAb,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPiB,mFAAH,sDAUjBe,EAAiB,mCAAG,WAAMzB,GAAN,8EACzBmB,EADyB,UAChBH,EADgB,kBACEhB,EADF,oBACqBiB,GADrB,SAElBG,EAAAA,EAAAA,IACND,GACJZ,MAAK,SAAAC,GACJ,OAAOA,EAASa,IACjB,IACAZ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPiB,mFAAH,sDAUjBJ,EAAS,mCAAG,WAAMN,GAAN,8EACjBmB,EADiB,UACRH,EADQ,kBACUhB,EADV,4BACqCiB,GADrC,SAEVG,EAAAA,EAAAA,IACND,GACJZ,MAAK,SAAAC,GACJ,OAAOA,EAASa,KAAKlB,IACtB,IACAM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPS,mFAAH,sDAUTgB,EAAY,mCAAG,WAAM1B,GAAN,8EACpBmB,EADoB,UACXH,EADW,kBACOhB,EADP,4BACkCiB,GADlC,SAEbG,EAAAA,EAAAA,IACND,GACJZ,MAAK,SAAAC,GACJ,OAAOA,EAASa,KAAKC,OACtB,IACAb,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAPY,mFAAH,qD","sources":["components/cast/castMarkup/CastMarkup.jsx","components/cast/Cast.jsx","services/api.js"],"sourcesContent":["import propTypes from 'prop-types';\n\nconst CastMarkup = ({ image, name }) => {\n  return (\n    <li>\n      <img width={100} src={image} alt={name} />\n      <p>{name}</p>\n    </li>\n  );\n};\n\nexport default CastMarkup;\n\nCastMarkup.propTypes = {\n  image: propTypes.string.isRequired,\n  name: propTypes.string.isRequired,\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchCast } from 'services/api';\nimport CastMarkup from './castMarkup/CastMarkup';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchCast(movieId)\n      .then(response => setCast(response))\n      .catch(error => {\n        console.log(error);\n      });\n  }, [movieId]);\n\n  return (\n    <ul>\n      {cast.map(({ id, name, profile_path }) => {\n        const image = `https://image.tmdb.org/t/p/w300_and_h450_bestv2/${profile_path}`;\n        return <CastMarkup key={id} name={name} image={image} />;\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6a0c01f57c7aac7238ef2830c0821332';\n\nexport const fetchTrendMovies = async () => {\n  const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data.results;\n    })\n    .catch(error => console.log(error));\n};\n\nexport const fetchSearchMovies = async searchName => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchName}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data.results;\n    })\n    .catch(error => console.log(error));\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n};\n\nexport const fetchCast = async movieId => {\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data.cast;\n    })\n    .catch(error => console.log(error));\n};\n\nexport const fetchReviews = async movieId => {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data.results;\n    })\n    .catch(error => console.log(error));\n};\n"],"names":["image","name","width","src","alt","movieId","useParams","useState","cast","setCast","useEffect","fetchCast","then","response","catch","error","console","log","map","id","profile_path","BASE_URL","API_KEY","fetchTrendMovies","url","axios","data","results","fetchSearchMovies","searchName","fetchMovieDetails","fetchReviews"],"sourceRoot":""}